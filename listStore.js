/*
    –º–æ–¥–µ–ª—å —ç–ª–µ–º–µ–Ω—Ç–∞ —Å–ø–∏—Å–∫–∞
    {
        id: '', // string
        title: '', // string
        isDone: false, // bool
        timeStamp: 0 // number
    }
*/

const defaultItems = [{
        id: '3234923948243',
        title: 'ü•ñ –ö—É–ø–∏—Ç—å —Ö–ª–µ–±',
        isDone: false,
        timeStamp: 1637744893677
    }, {
        id: '93485739485345',
        title: 'üßæ –û–ø–ª–∞—Ç–∏—Ç—å —Å—á–µ—Ç–∞',
        isDone: true,
        timeStamp: 1634844894677
    }, {
        id: '234924853945',
        title: 'üåè üî´ –ó–∞—Ö–≤–∞—Ç–∏—Ç—å –º–∏—Ä',
        isDone: false,
        timeStamp: 1632844984677
    }
]

class ListStore {
    constructor({ localStorageKey = 'STORE' }) {
        if(!window.localStorage) return new Error('localStorage not support!')
        this.localStorageKey = localStorageKey
        this.emitFunc = null
        this.declinationCounter = ['–¥–µ–ª–æ', '–¥–µ–ª–∞', '–¥–µ–ª']
        // —Ä–∞—Å—Å–∫–æ–º–µ–Ω—Ç–∏—Ç—å —Å—Ç—Ä–æ–∫—É —Å–Ω–∏–∑—É —á—Ç–æ–±—ã –æ—Ç–æ–±—Ä–∞–∂–∞–ª—Å—è –¥–µ—Ñ–æ–ª—Ç–Ω—ã–π –ª–∏—Å—Ç
        // localStorage.setItem(localStorageKey, JSON.stringify(defaultItems))
    }

    // –¥–æ–±–∞–≤–ª—è–µ—Ç –Ω—É–∂–Ω–æ–µ —á–∏—Å–ª–∏—Ç–µ–ª—å–Ω–æ–µ –∫ —á–∏—Å–ª—É
    _getDeclinationOfNum(number, titles) {  
        const cases = [2, 0, 1, 1, 1, 2];  
        return `${number} ${titles[( number % 100 > 4 && number % 100 < 20 ) ? 2 : cases[( number % 10 < 5 ) ? number % 10 : 5 ]]}`;
    }

    // –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥: –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –∏–∑ —Å—Ç–æ—Ä–∞
    _getData() {
        try {
            return JSON.parse(localStorage.getItem(this.localStorageKey))
        } catch (e) {
            console.error(e)
            return []
        }
    }

    // –≤—Å–ø–æ–º–æ–≥–∞—Ç–µ–ª—å–Ω—ã–π –º–µ—Ç–æ–¥: —Å–æ—Ö—Ä–∞–Ω—è–µ—Ç –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π –º–∞—Å—Å–∏–≤ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –≤ —Å—Ç–æ—Ä
    _setData(data) {
        try {
            localStorage.setItem(this.localStorageKey, JSON.stringify(data))
        } catch (e) {
            console.error(e)
        }
        return
    }

    // –≤—ã–∑—ã–≤–∞–µ—Ç –ø–µ—Ä–µ–¥–∞–Ω–Ω—ã–π callback —á—Ç–æ–±—ã –æ–±–Ω–æ–≤–ª—è—Ç—å –≤–µ—Ä—Å—Ç–∫—É –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏–π —Å–ø–∏—Å–∫–∞
    _emit() {
        this.emitFunc.call(null, this._getData(), this.countTodo)
    }

    // –¥–æ–±–∞–≤–ª—è–µ–º –Ω–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç –≤ –∫–æ–Ω–µ—Ü –º–∞—Å—Å–∏–≤–∞
    add(data = {}) {
        if(typeof data !== 'object') {
            return new Error('add method accept only object!')
        }
        let arrayList = this._getData()
        arrayList.push(data)
        this._setData(arrayList)
        this._emit()
        return
    }

    // —É–¥–∞–ª—è–µ—Ç –æ–¥–∏–Ω —ç–ª–µ–º–µ–Ω—Ç –∏–∑ –º–∞—Å—Å–∏–≤–∞
    remove(id = null) {
        if(!id) return new Error('remove method must take id param!')
        const newData = this._getData().filter(item => item.id !== id)
        this._setData(newData)
        this._emit()
    }

    // –º–µ–Ω—è–µ—Ç —Å—Ç–∞—É—Å —É –≤—ã–±—Ä–∞–Ω–Ω–æ–≥–æ —ç–ª–µ–º–µ–Ω—Ç–∞
    toggleStatus(id = null, isDone) {
        if(!id) return new Error('toggleStatus method must take id param!')
        const newData = this._getData().reduce((acc, item) => {
            const res = item
            if(res.id === id) {
                res.isDone = isDone
            }
            return [ ...acc, res ]
        }, [])
        this._setData(newData)
        this._emit()
    }

    // –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –≤—Å–µ—Ö –¥–æ–±–∞–ª–µ–Ω–Ω—ã—Ö —ç–ª–µ–º–µ–Ω—Ç–æ–≤
    get countAll() {
        if(typeof this._getData().length !== 'undefined') {
            const result = this._getData().length
            return this._getDeclinationOfNum(result, this.declinationCounter)
        } else {
            return this._getDeclinationOfNum(0, this.declinationCounter)
        }
    }

    // –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ —ç–ª–µ–º–µ–Ω—Ç–æ–≤ —É –∫–æ—Ç–æ—Ä—ã—Ö —Å—Ç–∞—Ç—É—Å isDone === false
    get countTodo() {
        if(typeof this._getData().length !== 'undefined') {
            const result = this._getData().filter(({ isDone }) => !isDone).length
            return this._getDeclinationOfNum(result, this.declinationCounter)
        } else {
            return this._getDeclinationOfNum(0, this.declinationCounter)
        }
    }

    // –æ—á–∏—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
    clear() {
        localStorage.setItem(this.localStorageKey, [])
        this._emit()
        return
    }

    // –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –º–∞—Å—Å–∏–≤ —Å —Å–æ—Ö—Ä–∞–Ω–µ–Ω–Ω—ã–º–∏ —ç–ª–µ–º–µ–Ω—Ç–∞–º–∏
    get list() {
        if(localStorage.getItem(this.localStorageKey)) {
            return JSON.parse(localStorage.getItem(this.localStorageKey))
        } else {
            return []
        }
    }

    // –ø—Ä–∏–Ω–∏–º–∞–µ—Ç —Ñ—É–Ω–∫—Ü–∏—é, –∫–æ—Ç–æ—Ä–∞—è –±—É–¥–µ—Ç –≤—ã–∑—ã–≤–∞—Ç—å—Å—è –ø—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏—è—Ö —Å–ø–∏—Å–∫–∞
    subscribeToUpdateList(callback) {
        this.emitFunc = callback
    }
}